{"name":"Simple-logging-aspect","tagline":"","body":"Introduction\r\n------------\r\n\r\nThe Simple Logging Aspect (SLA) facilitates logging method invocation details\r\nbefore a method is invoked and after a method returns.  The logger name is the\r\nclass name of the enclosing class and the log level is specified via an\r\nannotation parameter.\r\n\r\nIt is possible to specify if the method parameters and return value should be\r\nlogged.  Method parameters and return values are logged by their string\r\nrepresentation as returned by invoking toString.\r\n\r\nBelow is an example of annotating a method to be logged:\r\n\r\n@Log(logLevel=LogLevel.INFO, logParameters=true)\r\n\r\n\r\nUsing with AspectJ Compile Time Weaving\r\n---------------------------------------\r\n\r\nTODO\r\n\r\n\r\nUsing with AspectJ Load Time Weaving\r\n------------------------------------\r\n\r\nTODO\r\n\r\n\r\nUsing with Spring AOP Proxy Based Weaving\r\n-----------------------------------------\r\n\r\nTODO","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}